name: Gerando release no github com .NET Core

on:
  push:
    tags:
    - "v[0-9]+.[0-9]+.[0-9]+"
    
jobs:
  build:

    env:
      BUILD_CONFIG: 'Release'
      SOLUTION: 'W2JSoftware.sln'
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Verify commit exists in origin/main
      run: |
        git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
        git branch --remote --contains | grep origin/main
        
    - name: Set VERSION variable from tag
      #run: echo "BUILD_VERSION=1.1.0" >> $GITHUB_ENV
      run: echo "BUILD_VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
      
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5

    - name: Restore dependencies
      run: nuget restore $SOLUTION

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
        
    - name: Build
      run: dotnet build $SOLUTION --configuration $BUILD_CONFIG -p:Version=$BUILD_VERSION --no-restore
    
    - name: Run tests
      run: dotnet test $SOLUTION /p:Configuration=$BUILD_CONFIG --no-restore --no-build --verbosity normal 
        
    - name: Pack
      run: dotnet pack --configuration Release /p:Version=$BUILD_VERSION --no-build --output .
    
    - name: Push NugetOrg
      run: dotnet nuget push "*.nupkg" --source 'https://api.nuget.org/v3/index.json' --api-key ${{secrets.NUGET_API_KEY}} --skip-duplicate
  
    - name: Push GitHub Packages
      run: dotnet nuget push "*.nupkg" --source https://nuget.pkg.github.com/acraven/index.json --api-key ${GITHUB_TOKEN} --skip-duplicate

    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ${{ steps.Changelog.outputs.changelog }}
        draft: false
        prerelease: false